Етап 1 (типи матеріалів, робота з модулями) 

1. Базова збірка сайту 
Встановити сайт на локалхості. Встановити та налаштувати наступні модулі: +GlobalRedirect, +Administration Menu, +Views, +Pathauto, GoogleAnalytics, +XML sitemap, References, +Elysia Cron, +Metatag, +WYSIWYG, +Imce, редактор TinyMCE. 

+2. Створення типу матеріалу
Створити перший тип матеріалу з назвою “Фільм”, в типі матеріалу повинні бути такі поля: Заголовок, Зміст, Зображення, Жанр (term reference). 
Також необхідно створити 3 довільні фільми. 

3. Вивід фільмів
Створити сторінку, де будуть виводитись усі Фільм. Кожен фільм повинен містити у собі: Заголовок, Картинка(у зменшеному розмірі), Короткий зміст(обрізаний на 150 символів і у кінці 3 карпки), Список жанрів фільму, Посилання "Read more". 

4. Тип матеріалу “Рецензія”
Створити Другий тип контенту, який буде називатися Рецензія. Рецензія повинна супроводжуватися стандартними полями (заголовок та зміст)  + поле node reference, у якому можна відмітити тільки фільм до якого пишеться рецензія. 
Створити по декілька рецензій до різних фільмів.

5. Вивід рецензій.
Створити нову вюшку, де буде на сторінці виводитися список рецензій 
У виводі рецензій повинно бути: заголовок рецензій, короткий зміст рецензії, заголовок фільму,  жанри фільму. 

Загальні замітки: 
 - обовязково ознайомитися з кожним модулем. Під ознайомленням мається на увазі прочитаний файлік readme.txt, прочитана інструкція щодо встановлення (якщо є) і звичайно його використання. 
 - сайт повинне бути повністю виключно англомовним. 
Етап 2 (Ознайомлення з модулями, views)

1. Ознайомлення з модулями
Ознайомитися з наступними модулями: +xmlsitemap, +token, +transliteration, +quicktabs, +link, +email, +menu_block, +views_bulk_operations, +nodequeue, +field_group, +flag, +votingapi + fivestar, +privatemsg, +captcha, +userpoints, +devel, +conditional_fields, auto_nodetitle, +date, +masquerade, +page_title, +boost. 

2. Блоки. 
Створити за допомогою вюшки Блок, у якому будуть виводитися рецензії у заданому порядку, та тільки ті які потрібно. 
Назва блоку повинна бути “Popular reviews”. 
Обов'язкове використання модуля Nodequeue. 

3. Формат вюшки 
Створити нову вюшку, у якій виводиться сторінка з списками жанрів (термінів таксономії). 
Формат виводу повинен бути Grid шириною 5 елементів і висотою 5 елементів, якщо кількість тегів буде велика, тоді вмикається пейджер. 
Терміни повинні містити у собі лінк типу “/genre/[tid]/reviews”, де [tid] - № терміна таксономії. 

4. Робота з Contextual filters 
Створити ще одну сторінку, яка буде мати посилання типу “/genre/[tid]/reviews”, де [tid] - № терміна таксономії з словника жанрів. 
Відповідно до ID терміна такосномії виводиться усі матеріали приналежні до цього терміну. 
Приклад: заходимо по посиланню  “/genre/3/reviews”, у результаті повинні побачити усі рецензії, де фільми, до яких вони відносяться, мають даний жанр. 
Під заголовком вюшки повинно виводитися назва цього терміну (використати тип дисплею аттачмент). 

Загальні замітки: 
 - У ідеалі єдина вюшка повинна містити 3 дісплеї (2 сторінки та 1 аттачмент). 
 - Сайт повинен бути повністю англомовний. 
 - Під ознайомленням з модулем мається на увазі прочитаний файлік readme.txt, прочитана інструкція щодо встановлення (якщо є) і звичайно його використання. 
Етап 3 (Написання першого модуля) 

1. hook_menu 
Створити власну сторінку, яка у подальшому буде головною вашого сайту, також створити сторінки “403” та “404”, змінити адреси цих сторінок у системних налаштуваннях сайту. 

2. hook_block_info & hook_block_view 
Створити блок, у якому буде виводитися довільний текст, також блок повинен мати заголовок. 
Блок повинен виводитися на кожній сторінці сайту. 

3. hook_permission 
Створити доступ, який буде контролювати перегляд контенту у попередньо створеному блоці. 
Якщо певний користувач має доступ, тоді відображати текст що є у блоці, якщо доступ відсутній, тоді писати надпис "access to view this content is denied.". 

5. Додаткові хукі 
Ознайомитися та знати наступні хуки: hook_init, hook_node_view, hook_node_access, hook_node_insert, hook_node_update, hook_node_delete, hook_user_view, hook_user_insert, hook_user_update, hook_user_delete. 
		 
Загальні замітки: 
 - Необхідно знати, що таке хук і навіщо він. 
 - Обов'язково модуль повинен супроводжуватися кодінг стандартами (http://drupal.org/coding-standards).

Етап 4 (Темізація)

1. Поширені функції темізації
Створити модуль “my_theming”.
Створити сторінку, у які буде видна реалізація наступних фунцій темізації: theme_item_list, theme_fieldset, theme_table, theme_image_style.

2. Власна функція темізації
Написати hook_theme, створити у фунцію темізації, яка буде виводити поданий текст огорнутий в тег h2 та strong.
Показати приклад використання функції на сторінці, яка була створена у 1 завданні даного етапу.

3. Створення tpl.php файлу
Створити функцію темізації, яка буде виводити усі данні через окремо створений template файл.
Показати приклад використання функції на сторінці, яка була створена у 1 завданні даного етапу.

4. Встановлення теми
Поставити тему NineSixty (960 Grid System). Перейменувати тему у “My theme” (також змінити машину назву теми).

5. Скрипти та верстка
Розібратися як правильно підключаються .js та .css файли до теми.
Проаналізувати, як правильно пишуться js у Друпал.
Навчитися підключати нові .js та .css у модулі Друпал у формі та у hook_init.

6. tpl файли та препроцеси
Проаналізувати доцільність використання tpl файлів у Друпал. Знати які є системні tpl файли.
Створити будь який матеріал (не важливо який, аби був текст та заголовок, можна взяти вже існуючий). За допомогою функції template_preprocess_page замінити заголовок цієї ноди на "Example template_preprocess_page".
Познайомитися та знати що роблять наступні препроцеси: template_preprocess_node, template_preprocess_html, template_preprocess_field, template_preprocess_block.

Загальні замітки:
 - Варто зрозуміти суть препроцесів
 - Обов'язково модуль повинен супроводжуватися кодінг стандартами (http://drupal.org/coding-standards).

0. Створити модуль “my_forms”.

1. Написання форми
Створити сторінку Contacts, на сторінці у формі повинні відображатися наступні елементи: ім'я, прізвище, нік(*), емейл(*), номер телефону, стать (радіокнопка), вибір країни (селектліст з пунктами (Ukraine, Russia, USA), повідомлення (textarea)(*), Походження з правилами (чекбокс)(*). У форму додати філдсет, де буде виводитися будь-який текст. У самому кінці кнопка для відправки форми. Поля, біля яких є зірочка - повинні бути обов'язковими.
До форми реалізувати перевірку до відповідних полів.
Якщо форма адекватно заповнена, тоді у інформаційному повідомлені виводити все те, що введено у форму.

2. hook_form_alter 
Познайомитися хуком, дізнатися що він робить.

3. Webforms
Зробити аналогічну форму як у 1 пункті цього етапу за допомогою модуля Webforms.

Загальні замітки:
 - На валідації форми обов'язково перевіряти валідність введеного емейлу, та № телефону, якщо він є.
 - Обов'язково модуль повинен супроводжуватися кодінг стандартами (http://drupal.org/coding-standards).

Етап 6 (Робота з БД)

1. Створення модуля 
Створити модуль, який буде називатися “my_database”. 
При встановлені модуля повинна створюватися таблиця у БД Друпала під назвою "custom_table". Обов'язкове написання файлу  .install
Таблиця повинна мати такі поля: id(primary key, serial), number(int), teaser(varchar(150)), text(text). - Таблиця повинна створюватися під час увімкнення модуля, і видалятися після виключення та видалення модуля.

2. db_insert 
Зробити сторінку, на якій буде форма з  полем number(textfield), teaser(textfield), text(textarea). На відправці форми робити вставку введених даних у створену табличку. 
Усі поля є обовязковими, також форма повинна мати валідацію для адекватної вставки даних.

3. db_select
Зробити сторінку де будуть виводитися усі записи в таблиці.
Вивід сортується по полю id по збільшенню.

4. db_update
Додати до існуючої таблички ще 1 стовпчик і назвати його "Actions". У стовпчику повинно бути посилання на редагування. Після натискання даного посилання, відбувається прехід на сторінку для редагування. Звісно сторінка повинна мати форму, де ми вже зможемо відредагувати дані обраного запису.

5. db_delete
У колонці "Actions" додати посилання на видалення. Видалення повинно запису повинно супроводжуватися підтвердженням вибору.

Загальні замітки:
 - Обов'язково модуль повинен супроводжуватися кодінг стандартами (http://drupal.org/coding-standards).

Питання для Самоперевірки

Що таке PHP?
Що таке веб-сервер?
Які є типи даних у PHP?
Принципи ООП у PHP.
Перерахувати поширені функції для роботи із числами, стрічками, масивами, розказати що вони роблять.
Що таке CSS і яке його призначення?
Навіщо JS, що воно таке?
Хто такий Друпал?
Що таке хук? Навіщо він?
Як створити свій хук?
Описати систему темізації у Друпал.
Описати принципи роботи з БД у Друпал.
Які має можливості hook_menu?
Що таке ГІТ, навіщо він?
